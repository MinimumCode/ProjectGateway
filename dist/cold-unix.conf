###############################################################################
#
# Open iT License Optimizer application configuration for UNIX
#
# This configuration file is used to specify which applications and licenses
# should be monitored, and what action to take, when licenses have been idle
# for too long.
#
#
# NOTE (read carefully):
#
# Each section of the configuration file is indicated by a BEGIN line and
# terminated by a END line. Individual sections are described in detail within.
#
# Empty lines, lines containing only whitespace characters, or lines where the
# first non-white is '#', are ignored. ('#' is used to indicate comments.)
# You can not write a comment at the end of lines.
#
#    # This is a valid comment
#    mouse = 0 1    # This is an invalid comment
#

BEGIN applications
###############################################################################
#
# Applications that should be monitored and considered for disabling.
#
# handle  : Application identifier - used to uniquely identify applications
#           across sections.
#           This is CASE SENSITIVE! And you can use "-" or "_" in names.
#
# irq     : Interactive request. If omitted, or value = P0, then just disable
#           without wait or interaction with the user. If value > P0 (Ex. P30S),
#           then give the user time, for example 30 seconds, to avoid disable.)
# method  : Method of disabling the application.
#           none - don't do anything with the application
#           log - log disable, but don't actually disable
#           suspend - suspend the application based on the set criteria
#           terminate - terminate the application based on the set criteria
#           standby - set the host in standby mode based on the set of criteria
#           NOTE:corrupt and uninstall are NOT YET SUPPORTED!
#           corrupt - terminate and corrupt/encrypt executable
#           uninstall - terminate and uninstall application, completely or partially
# arch    : Architecture discrimination - ignore on all other architectures
# os      : Operating system discrimination - ignore on all other os'es.
#           arch and os can also have '!' in front, to negate
#           Example: os = !windows* - all os'es except windows
# exe     : Globbing pattern identifying the executable. You may use / and \ to
#           separate path elements.
# --Note  : Two glob patterns of different handles must not match the same process.
# exclude : Globbing pattern - to identify those executables to be excluded
#           from the "exe" list
# multiple: Specify multiple = yes to view all executables matched in the same
#           handle as part of the same application/license. (I.E. combine usage
#           for all of these, and view them as a whole.)
# timeout : The longest period the application can run idle, before disable
# keyboard,
# mouse,
# cpu,
# io      : Two values, threshold and weight, separated by at least one space
#           If the measured value is less than the threshold, then the weight
#           becomes the value for the corresponding activity. The activity
#           values measured on hosts are
#             keyboard : average keyboard events per second last period
#             mouse    : average mouse eventes per second last period
#             cpu      : average cpu used per second last period
#             io       : average bytes read/written per second last period
# lm      : (Optional) Type of License manager. Currently supported: flex.
# feature : (Optional, unless lm) Specify a feature (or product) (including
#           version for which to return license when the appliation is
#           disabled. Multiple feature statements are allowed.
#           Version *MUST BE* specified as: <feature name>\<version>
# license : (Optional) required for some LMs. Specify the license file name,
#           eg. license.dat, with full path.
# lmserver: (Optional, but required for FLEXlm if 'license' is not included)
#           Identify the license server (or set) as 'lmserver=<port>@<host>'
#           If there are more than one server in the set, list them comma-
#           seperated. If more than one server set, put in a seperate line.
# std-level:(Optional) Used with method=standby to indicate level of standby
#           (or hibernation).
#				1-standby
#				2-hibernation
# std-delay:(Optional) Used with method=standby to indicate a delay for server
#           indicating how long to wait before trying to free licenses.
# match-children: If this is defined (with "yes"), then the optimizer will
#           take care of all the child process of the application during
#           optimization.
# --Note 1: match-children is NOT valid for Windows.
# --Note 2: When this is defined, the 'multiple=yes' will automatically be
#           considered and application handled accordingly.
# term-excl: (Optional) If set to "yes", the Terminate button will be hidden.
# minimized: (Optional) If set to "yes", the disabler window will appear on the 
#           task bar but will stay minimized and not pop up on the screen.
# windows-rules: (Optional, Windows only) A list of selection rules to limit which
#           windows in the application process(es) should be minimized/restored.
#           during suspend/resume action. 
#            [
#            /* Available fields
#              {
#                /* Pattern to match handle name */
#                "handle": "<regex>",
#                /* Pattern to match executable name */
#                "exe": "<regex>",
#                /* Pattern to match window class name */
#                "class": "<regex>",
#                /* Pattern to match window caption (title bar) */
#                "caption": "<regex>",
#                /* Logical combination of WS_* flags which is tested against the
#                   window's style, e.g. "WS_VISIBLE". */
#                "style": "<WS_* flags>",
#                /* Whether the window is the root parent and/or owning window. */
#                "root": <boolean>,
#                /* Logical combination of "WS_EX_* flags which is tested against
#                   the window's style, e.g. "WS_EX_NOACTIVATE". */
#                "exstyle": "<WS_EX_* flags>",
#                /* Command to perform on window, e.g "SW_MINIMIZE" */
#                "on-suspend": "<SW_* constant>",
#                /* Command to perform on window, e.g "SW_RESTORE" */
#                "on-resume": "<SW_* constant>"
#              },
#            */
#              { /* Ignore non-desktop windows, no actions defined here. */
#                "exstyle" : "WS_EX_NOACTIVATE"
#              },
#              { /* Apply action to a single window in Notepad */
#                "handle": "Notep.*",
#                "caption": ".*Notepad",
#                "on-suspend": "SW_MINIMIZE",
#                "on-resume": "SW_RESTORE"
#              },
#              { /* Disable actions on all other windows in Notepad */
#                "handle": "Notep.*"
#              },
#              { /* Apply default action */
#                "on-suspend": "SW_MINIMIZE",
#                "on-resume": "SW_RESTORE"
#              }
#            ]
# NOTE:
# There *MUST BE* a line (with one or more hyphen) at the end of each
# application handle, including the last one.

# Only the values 'none' and 'log' are used for 'method' in the examples to
# avoid the suspension/termination of applications, since Optimizer starts
# working immediately after the install/upgrade.
-------------------------------------------------------------------------------
handle   = Calculator
method   = none
irq      = P0
arch     = i386
os       = windows*
exe      = *\calc.exe
timeout  = P5M
keyboard = 0 1
mouse    = 0 1
cpu      = 0.2 1
i/o      = 0.2 1
# This example shows the regulation of the Windows Calculator. This handle will
# only be active on Windows machines running on i386 architecture.
# If the calculator is idle for 5 minutes, it will be suspended without waiting
# for user response (See irq = P0).
# Note that cpu and i/o has a 0.2 threshold. This means that even with some cpu
# and i/o activity, if below this threshold, they are still considered idle.
-------------------------------------------------------------------------------
handle   = NotePad
method   = none
irq      = P5M
os       = windows*
exe      = *notepad.exe
multiple = yes
timeout  = P30S
keyboard = 0 1
mouse    = 0 1
cpu      = 0.2 1
i/o      = 0.2 1
window-rules = [{ "caption": ".*Notepad", "on-suspend": "SW_MINIMIZE", "on-resume": "SW_RESTORE" }]

# Notice how we add a * after os name. This is because we want this to apply to
# all windows operating systems. (I.E. "Windows XP", "Windows 2000", etc.)
# We have set irq = P5M in this example. This means that notepad will not be
# deactivated right away after timeout time. A * in the exe name implies that all
# notepads in the machine, existing with that name pattern will be considered.
#
# A popup will appear, and let the user know that the application will be
# disabled within 5 minutes. (It will count down the seconds, from 300 to 0.)
# The user thus have 5 minutes to prevent the disabling.
# Note the use of 'multiple'. With multiple = yes, we specify that all notepads
# should be treated as one. I.E. if one notepad has activity, none are
# disabled - even if you may have several other which are totally idle.
#
# Multiple should only be used with licensed applications, where several
# applications share the same license. See example below.
-------------------------------------------------------------------------------
handle   = InternetExplorer
method   = log
exe      = *\Internet Explorer\*
multiple = yes
timeout  = P30M
keyboard = 0 1
mouse    = 0 1
cpu      = 0.2 1
i/o      = 0.2 1
# We have skipped architecture and os completely in this example. May or may
# not be a good idea... By doing this, we allow for all.
# Note how we in this case did not specify the executable explicitly. Instead,
# we allow all executables with path matching this exe pattern to be included
# in this handle. Also, by using multiple = yes, we treat all of them as one
# application.
# Notice the value of 'method'. By using method = log, we do not actually
# disable. We only log that disable would have taken place. This is a good way
# to calibrate and test your setup, before you take the step to actually allow
# physical disable of applications.
-------------------------------------------------------------------------------
handle   = Games
method   = log
exe      = *freecell.exe
exe      = *mshearts.exe
exe      = *spider.exe
exe      = *winmine.exe
exe      = *pinball.exe
exe      = *sol.exe
multiple = no
timeout  = P5M
keyboard = 0 1
mouse    = 0 1
cpu      = 0 1
i/o      = 0.2 1
# This example shows how you can specify multiple exe lines, but having
# multiple = no. This means that each matching executable will be treated as
# an individual. (Having multiple = no is equal to omit 'multiple'.)
# These windows games will all be logged under the application name "Games".
# They will not be physically disabled, however, only logged.
-------------------------------------------------------------------------------
handle   = OpenWorks
method   = none
irq      = P2M
arch     = i386
os       = windows*
exe      = *\ow\*
timeout  = P30M
keyboard = 0 1
mouse    = 0 1
cpu      = 0.2 1
i/o      = 0.2 1
#lm       = flex
#feature  = wdm\1.0
#feature  = wcv\2.7
###license  = D:\lmservset1\path1\lmutil\license.dat
###license  = C:\lmservset2\path2\license.dat

# This example shows how to specify the license manager type & the corresponding
# license file with full path. Note: If more than one license server set/cluster
# is used, each must be SPECIFIED IN A SEPERATE LINE. A set/cluster means more
# than one license server (redundant) serving the same license.
# Also note how the features and versions are specified
-------------------------------------------------------------------------------
handle   = RationalPurify
method   = none
irq      = P2M
exe      = *\rational
timeout  = P30M
match-children = yes
keyboard = 0 1
mouse    = 0 1
cpu      = 0.2
i/o      = 0.2 1
#lm       = flex
#feature  = wdm\1.0
#feature  = wcv\2.7
#rm-retry-interval = P30S
#rm-max-retry      = 10
###lmserver = 7001@host1inx,7002@host2inx
###lmserver = 8003@myhost1iny,8004@host2iny, 8005@host3iny

# This example shows how to specify the license server. This is an alternative
# to specifying the 'license.dat'. It must have both the port and the hostname
# of the license server. The second 'lmserver' line specifies another server
# set/cluster (see the previous example), and it must be in a seperate line.
# Note: You should specify all the servers in the set/cluster or at least 2.
# --You also find match-children parameter defined, to handle all the child
#   process of the application. Here 'multiple=yes' is true.
-------------------------------------------------------------------------------
END




BEGIN global
###############################################################################
#
# Global settings.
#

#
# For each application, a formula is processed, which looks at keyboard, mouse,
# CPU and i/o activity. The formula works as follows:
#
# If usage is below the threshold for the given activity type, then apply the
# weight of that type. (Otherwise, apply zero.)
# Add the applied weights of all types, to get a sum.
#
# If the weight is 1 for all types, then that sum indicates the number of idle
# activity types. (I.e. if there is no usage for all types, except mouse, then
# the sum will be 3 = 3 idle types.)
#
# The disable threshold is the decisive element. If the sum of idle types is
# greater than or equal to the disable threshold, then disable will be
# considered. (Or equally, if the sum < disable treshold, disable will not be
# considered.)
# A disable threshold of 4 means that all of the four types must be idle.
#
# NOTE: You can have different weights for different applications. It is per-
# fectly legal to specify e.g. a weight of 2 for mouse and 2 for keyboard,
# and nothing for cpu and i/o.

disable-threshold: 4
window-rules: [ { "exstyle": "WS_EX_NOACTIVATE" }, { "style": "WS_VISIBLE", "root": true, "on-suspend": "SW_MINIMIZE", "on-resume": "SW_RESTORE" } ]

END




BEGIN priorities
###############################################################################
#
# Some hosts and/or users can be given elevated (or lowered) priority for some
# applications.
#
# Priority range:
#
#   total   : Never disable
#   high    : Elevated priority => timout * 2
#   normal  : Default
#   low     : Lowered priority  => timout * 0.5
#
# You can have multiple lines for each handle, and also overlapping host and/
# or user. When applied, the first matching line from the bottom will be used.
# Thus you should specify general priorities first, and then special.
# To change the default for a given handle, specify * for host and user, in the
# top most line where that handle is used.
#

# HANDLE            HOST           USER                GROUP           PRIORITY
Calculator,         *,             *,                  *,              low
Calculator,         *,             Administrator,      *,              normal
NotePad,            *,             *,                  Administrators, total
InternetExplorer,   tiger,         *,                  *,              high
OpenWorks,          *,             root,               *,              total
RationalPurify,     *,             root,               *,              high

# For the Calculator, we have set a general low priority. Only the
#     Administrator user have a normal priority.
# For the NotePad, we have given Administrator total priority, which means that
#     notepad will never be disabled when run by Administrator. For all other
#     users, there is normal priority.
# Internet explorer will run with normal priority for all users, except on the
#     machine named tiger, on which all users are granted a high priority.
# The OpenWorks application have normal priority for all users on all hosts,
#     except the root user, for which the application will never be disabled.
# The RationalPurify application have normal priority for all users on all hosts,
#     except the root user, for which the time to disable is twice the set time.

# Note that these examples are not necessarly very practical. They just
# illustrate the possibilities.

END




BEGIN rules
###############################################################################
#
# Rules for when to consider disabling.
#
# NOTE: There *MUST* be at least one rule for each handle defined in this
# configuration file, in order for that handle to be processed. If a handle is
# not included by a rule, it will be ignored.
#
# Syntax: <id>, <handle>, <rule1> + <rule2> + ... + <ruleN>
# Syntax, rule: <key> <operator> <value(s)>
#
# <id> is a number, unique for that rule. The rules need not be ordered.
#
# Available keys:
# count       	: Number of processes
# license-use 	: License use, in percent of total available licenses
# used-licenses	: Used licenses, in actual license count used
# year        	: Year
# month       	: Month (1-12)
# mday        	: Day of month (1-31)
# week        	: Week of year (1-53) (NOT AVAILABLE IN 4.7)
# wday        	: Day of week (1-7)
# hour        	: Hour of day (0-23)
# minute      	: Minute (0-59)
#
# Available operators:
# =  : Equal to
# != : Not equal to
# >  : Greater than
# >= : Greater than, or equal to
# <  : Less than
# <= : Less than, or equal to
#
# Values:
# A value may be a single numerical value, a set of numbers, or a range.
# Single numerical values are given as is. Sets and ranges must be enclosed in
# square brackets. The values of a set is separated by comma, and a range is
# indicated by a hyphen. I.E. [1,2,3,4,5] = [1-5].
#
# Example: 1, myapp, wday=[1-5] + license-use>75
# This says: If mon, tue, wed, thur, or fri, AND 75 % license usage, then
# consider myapp for disable.
#
# It is perfectly legal to have multiple rules for the same application handle.
# If more than one rules are valid, only the first valid rule will be used.

#
# Example:
# 1, myapp, hour=[16-23]
# 2, myapp, hour=[0-7]
# This says: If between 16:00 and 23:59 OR if between 00:00 and 07:59, then
# consider disable.
#
# Example:
# 1, myapp, license-use>70
# 2, myapp, count>1
# This says: If more than 70 % license usage OR more than one instance of the
# application running (locally), then consider disable.
#
# Thus you can read rules on the same line (separated by +) as AND, and rules
# on different lines as OR.
#
# IMPORTANT: There should not be any DUPLICATE RULE ID. If there is, that rule
# will be ignored, and the debug logs would show ERROR for duplication).

# ID   HANDLE              RULES
1,     Calculator,         count > 0
2,     NotePad,            wday=[1-5] + hour=[8-16]
3,     InternetExplorer,   wday=[1-5] + hour=[0-7]
4,     InternetExplorer,   wday=[1-5] + hour=[17-23]
5,     InternetExplorer,   wday=[6-7]
6,     Games,              count > 1
#7,     OpenWorks,          license-use > 70
7,     OpenWorks,          count > 1
#8,     RationalPurify,     license-use > 85
8,     RationalPurify,     count > 1

# For the calculator, we only specify that count (the number of open
#     calculators) is greater than zero.
# For notepad, disable will only be considered Monday-Friday, between 08:00
#     and 16:59 (inclusive).
# Internet explorer is set up a bit more complicated. It will only be
#     considered for disable at weekdays, between 00:00 and 07:59, and between
#     17:00 and 23:59. During weekends considered disabling for all hours.
# The OpenWorks applications is licensed, and we use that in the rule. It will
#     be considered for disable only if more than 70 % of the available licenses
#     are in use.
# The RationalPurify will be considered for disabling if usage is above 85%.
# **Note that these are just examples, and not necessarily very practial.**

# Again, please note that if you do not include any rules for a handle, that
# handle will not be taken into account.

END
